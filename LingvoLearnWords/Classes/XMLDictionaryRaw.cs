//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true)]
[XmlRootAttribute(Namespace="", IsNullable=false)]
public partial class statistics {
    
    private string readyMeaningsQuantityField;
    
    private string activeMeaningsQuantityField;
    
    private string learnedMeaningsQuantityField;
    
    private string statusField;
    
    private string answeredField;
    
    private string shownField;
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string readyMeaningsQuantity {
        get {
            return readyMeaningsQuantityField;
        }
        set {
            readyMeaningsQuantityField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string activeMeaningsQuantity {
        get {
            return activeMeaningsQuantityField;
        }
        set {
            activeMeaningsQuantityField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string learnedMeaningsQuantity {
        get {
            return learnedMeaningsQuantityField;
        }
        set {
            learnedMeaningsQuantityField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string status {
        get {
            return statusField;
        }
        set {
            statusField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string answered {
        get {
            return answeredField;
        }
        set {
            answeredField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string shown {
        get {
            return shownField;
        }
        set {
            shownField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true)]
[XmlRootAttribute(Namespace="", IsNullable=false)]
public partial class dictionary {
    
    private statistics[] statisticsField;
    
    private dictionaryCard[] cardField;
    
    private string formatVersionField;
    
    private string titleField;
    
    private string sourceLanguageIdField;
    
    private string destinationLanguageIdField;
    
    private string nextWordIdField;
    
    private string targetNamespaceField;
    
    private string soundfileField;
    
    /// <remarks/>
    [XmlElementAttribute("statistics")]
    public statistics[] statistics {
        get {
            return statisticsField;
        }
        set {
            statisticsField = value;
        }
    }
    
    /// <remarks/>
    [XmlElementAttribute("card", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public dictionaryCard[] card {
        get {
            return cardField;
        }
        set {
            cardField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string formatVersion {
        get {
            return formatVersionField;
        }
        set {
            formatVersionField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string title {
        get {
            return titleField;
        }
        set {
            titleField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string sourceLanguageId {
        get {
            return sourceLanguageIdField;
        }
        set {
            sourceLanguageIdField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string destinationLanguageId {
        get {
            return destinationLanguageIdField;
        }
        set {
            destinationLanguageIdField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string nextWordId {
        get {
            return nextWordIdField;
        }
        set {
            nextWordIdField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string targetNamespace {
        get {
            return targetNamespaceField;
        }
        set {
            targetNamespaceField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string soundfile {
        get {
            return soundfileField;
        }
        set {
            soundfileField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true)]
public partial class dictionaryCard {
    
    private string wordField;
    
    private dictionaryCardMeaningsMeaning[][] meaningsField;
    
    /// <remarks/>
    [XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string word {
        get {
            return wordField;
        }
        set {
            wordField = value;
        }
    }
    
    /// <remarks/>
    [XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [XmlArrayItemAttribute("meaning", typeof(dictionaryCardMeaningsMeaning), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public dictionaryCardMeaningsMeaning[][] meanings {
        get {
            return meaningsField;
        }
        set {
            meaningsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true)]
public partial class dictionaryCardMeaningsMeaning {
    
    private statistics[] statisticsField;
    
    private dictionaryCardMeaningsMeaningTranslationsWord[][] translationsField;
    
    private dictionaryCardMeaningsMeaningExamples[] examplesField;
    
    private dictionaryCardMeaningsMeaningSound[] soundField;
    
    private string transcriptionField;
    
    private string soundfileField;
    
    private string partOfSpeechField;
    
    private string meaningIdField;
    
    /// <remarks/>
    [XmlElementAttribute("statistics")]
    public statistics[] statistics {
        get {
            return statisticsField;
        }
        set {
            statisticsField = value;
        }
    }
    
    /// <remarks/>
    [XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [XmlArrayItemAttribute("word", typeof(dictionaryCardMeaningsMeaningTranslationsWord), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public dictionaryCardMeaningsMeaningTranslationsWord[][] translations {
        get {
            return translationsField;
        }
        set {
            translationsField = value;
        }
    }
    
    /// <remarks/>
    [XmlElementAttribute("examples", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public dictionaryCardMeaningsMeaningExamples[] examples {
        get {
            return examplesField;
        }
        set {
            examplesField = value;
        }
    }
    
    /// <remarks/>
    [XmlElementAttribute("sound", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public dictionaryCardMeaningsMeaningSound[] sound {
        get {
            return soundField;
        }
        set {
            soundField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string transcription {
        get {
            return transcriptionField;
        }
        set {
            transcriptionField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string soundfile {
        get {
            return soundfileField;
        }
        set {
            soundfileField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string partOfSpeech {
        get {
            return partOfSpeechField;
        }
        set {
            partOfSpeechField = value;
        }
    }
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string meaningId {
        get {
            return meaningIdField;
        }
        set {
            meaningIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true)]
public partial class dictionaryCardMeaningsMeaningTranslationsWord {
    
    private string valueField;
    
    /// <remarks/>
    [XmlTextAttribute()]
    public string Value {
        get {
            return valueField;
        }
        set {
            valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true)]
public partial class dictionaryCardMeaningsMeaningExamples {
    
    private string exampleField;
    
    /// <remarks/>
    [XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string example {
        get {
            return exampleField;
        }
        set {
            exampleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true)]
public partial class dictionaryCardMeaningsMeaningSound {
    
    private string nameField;
    
    /// <remarks/>
    [XmlAttributeAttribute()]
    public string name {
        get {
            return nameField;
        }
        set {
            nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true)]
[XmlRootAttribute(Namespace="", IsNullable=false)]
public partial class NewDataSet {
    
    private object[] itemsField;
    
    /// <remarks/>
    [XmlElementAttribute("dictionary", typeof(dictionary))]
    //[System.Xml.Serialization.XmlElementAttribute("statistics", typeof(statistics))]
    public object[] Items {
        get {
            return itemsField;
        }
        set {
            itemsField = value;
        }
    }
}
